# The four adjacent digits in the $1000$-digit number that have the greatest product are
# $9 \times 9 \times 8 \times 9 = 5832$.</p>
# Find the thirteen adjacent digits in the 1000-digit number that have the greatest product.
# What is the value of this product?

def find_max_product(num: int, num_digits: int):
    # TODO: can ignore 0s 
    digit_map = list(map(int, str(num)))
    found_digits = []
    max_product = 0
    for i, digit in enumerate(digit_map):
        if (i + num_digits - 1) < len(str(num)):
            product = 1
            tmp_digits = []
            for j in range(0, num_digits):
                val = digit_map[i + j]
                tmp_digits.append(val)
                product = product*val
            if product > max_product:
                max_product = product
                found_digits = tmp_digits

    print(f"Max product: {max_product}")
    print(f"Digits: {found_digits}")


if __name__ == '__main__':
    num = 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
    # num = 1234321
    find_max_product(num, 4)
